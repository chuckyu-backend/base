plugins {
    id 'org.springframework.boot' version '2.5.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.freefair.lombok" version "5.3.3.3"
//    id 'maven-publish'
    id 'java-library'
    id 'java'
    id 'idea'
}

group = 'com.chuck'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('queryDslVersion', "4.4.0")
    set('springdocVersion', "1.6.4")
    set('spockVersion', "2.1-M2-groovy-3.0")
    set('testcontainersVersion', "1.16.2")
    set('nexusUrl', "http://192.168.5.85:8081")
    set('mapstructVersion', '1.4.2.Final')
    set('knife4jVersion', "2.0.7")
    set('validationApiVersion', "2.0.0.Final")
    set('validatorVersion', "6.0.22.Final")
    set('baseVersion', '0.0.1')
    set('commonVersion', '0.0.1')
    set("guavaVersion", "20.0")
    set('jwtVersion', '0.9.1')
    set('jedisVersion', '3.7.1')
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // 初始依赖
    implementation "com.google.guava:guava:${guavaVersion}"

    // Test
//    implementation 'org.hamcrest:hamcrest:2.2'
//    testImplementation('org.powermock:powermock-module-junit4:1.5') {
//        exclude group: 'org.hamcrest'
//    }

    // Spock test
//    testImplementation "org.spockframework:spock-core:${spockVersion}"
//    testImplementation "org.spockframework:spock-spring:${spockVersion}"

// JSON-PATH
//    testImplementation 'com.jayway.jsonpath:json-path'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

//    annotationProcessor 'javax.annotation:javax.annotation-api'

    implementation "io.jsonwebtoken:jjwt:${jwtVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.apache.poi:poi-ooxml:4.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation "redis.clients:jedis:${jedisVersion}"
}

bootJar {
    enabled = false
}
jar {
    enabled = true
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}